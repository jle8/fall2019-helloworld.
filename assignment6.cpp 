#include <iostream>
#include <fstream>
#include <stdio.h>
#include <stdlib.h>
#include <iomanip>
#include <time.h>
using namespace std;

void BubbleSort(int arrSize, double* arr){
  for (int i = 0; i < arrSize - 1; ++i){
    for (int j = i + 1; i < arrSize; ++i){
      if(arr[i] > arr[j]){
        double temp = arr[i]
        arr[j] = arr[i]
        arr[j] = temp;
      }
  }
}
void SelectionSort(int arrSize, double* arr){

}
int SortSplit(int left, int right, double* arr){
  int low = left;
  int high = right;

  while(low < high){
    low = low + 1;
    //cout << arr[low] << " " << arr[high] << endl;
    while(arr[low] <= arr[left] && low <= right){
      low = low + 1;
    }

    high = high - 1;
    while(arr[high] > arr[left] && high >= left){
      high = high - 1;
    }
    if(!(low >= high)){
      double temp = arr[low];
      arr[low] = arr[high];
      arr[high] = temp;
    }


  }
  double temp = arr[left];
  arr[left] = arr[high];
  arr[high] = temp;

  return high;

}

void QuickSort(int left, int right, double* arr){
  cout << left << " " << right << endl;
  if(left < right){
      int pivPoint = SortSplit(left, right, arr);
      QuickSort(left, pivPoint - 1, arr);
      QuickSort(pivPoint + 1, right, arr);
  }

}

double* CopyofArray(double * orig, int arrSize){
  double * copy = new double[arrSize];

  for(int i = 0; i < arrSize; ++i){
    copy[i] = orig[i];
  }
  return copy;
}



int main() {
  int arrSize = 1000;
  double * A = new double[arrSize];
  const double pointone = 0.01;

  for(int i = 0; i < 20; ++i){
    //A[i] = (static_cast<double>((rand()) % arrSize) / static_cast<double>(5)) + pointone;
    A[i] = 20 - 1 - i;
  }

  //double * quickSortCopy = new CopyofArray(A, arrSize)
  BubbleSort(0,arrSize,A);
  cout << "BubbleSort" << endl;
  for(int i = 0; i < 20; ++i){
    cout << A[i] << endl;
  }
  QuickSort(0,20-1,A);
  for(int i = 0; i < 20; ++i){
    cout << A[i] << endl;
  }
  cout << "QuickSort" << endl;

  delete []A;

   return 0;
}


Chat Conversation End
Type a message...
